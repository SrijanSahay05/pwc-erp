version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"  # Expose Vite dev server port
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules  # Named volume for node_modules
    environment:
      - VITE_API_URL=http://localhost/
      - NODE_ENV=development
      - NPM_CONFIG_LOGLEVEL=verbose  # For debugging npm issues
    user: "node"
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"  # Expose Django dev server port
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=dev-secret-key-change-in-production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,209.38.124.151
      - DATABASE_URL=postgres://postgres:postgres@db:5432/pwc_erp
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost,http://209.38.124.151
      - CORS_ALLOW_CREDENTIALS=true
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pwc_erp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"  # Expose PostgreSQL port for local development
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_node_modules:  # Named volume for node_modules 